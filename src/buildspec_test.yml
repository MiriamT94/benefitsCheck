version: 0.2
env:
  parameter-store:
    PYPI_USERNAME: /pypi/username
    PYPI_PASSWORD: /pypi/password

phases:
  install:
    runtime-versions:
      python: 3.7
      nodejs: 10
    commands:
      # Disable SAM TELEMETRY
      - export SAM_CLI_TELEMETRY=0
      # Give execute permissions to all build scripts
      - chmod +x ./tools/build/*.sh
      # Set an alias to the update-commit-status, which creates commit statuses in GitHub
      - TAG="./tools/build/update-commit-status.sh"
      # Install Hub CLI for GitHub
      - ./tools/build/hub-installer.sh && PATH=$PATH:/opt/tools/hub/bin
      - pip install --upgrade pip
      - pip install -q bandit coverage==4.5.4 schema pylint_quotes prospector==1.3.1
      - pip install -r requirements.txt
#      - pip install pytest && pip install poetry
#      - poetry install
  pre_build:
    commands:
      # Disable tests log info and error messages
      - export LOG_LEVEL=CRITICAL
      # Running all prospector tools for code quality analysis
      - $TAG "Prospector checks" "prospector"
      - $TAG "Bandit tests" "bandit -r -q ."
      # Running all unittests
      - $TAG "Unit tests" "coverage run --branch --include=src/*.py,src/*/*.py,src/*/*/*.py,src/*/*/*/*.py -m unittest tests/test_*.py tests/*/*/test_*.py tests/*/*/*/test_*.py"
      # Checking that the code is 100% covered by unit tests
      - $TAG "Coverage check" "coverage report -m --skip-covered --fail-under=100 --omit=tests/*,it/*"

      - export OUR_COMMIT_SHA=`git rev-parse HEAD`
      - bandit -r .
      - prospector
      - coverage run --source="." -m unittest
      - coverage report -m --fail-under=100 --omit=*/__init__.py,tests/*,setup.py
  build:
    commands:
      - echo Running Tests
      - poetry build

  post-build:
    commands:
      - poetry publish --dry-run

  artifacts:
    files:
      - ./**/*
